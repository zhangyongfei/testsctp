FUNCTION(EnableUserFolders)
	IF(MSVC) 
		SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
	ENDIF()	
ENDFUNCTION(EnableUserFolders)

FUNCTION(SetDebug)
	SET(CMAKE_BUILD_TYPE DEBUG)
	IF(MSVC) 
		SET(CMAKE_C_FLAGS "-DWIN32 -D_DEBUG -DDEBUG")
		SET(CMAKE_CXX_FLAGS "-DWIN32 -D_DEBUG -DDEBUG /EHSC")
	ELSE()
		SET(CMAKE_C_FLAGS "-O0 -GGDB -D_DEBUG -DDEBUG -DPOSIX -DLINUX")
		SET(CMAKE_CXX_FLAGS "-O0 -GGDB -D_DEBUG -DDEBUG -DPOSIX -DLINUX")
		SET(CMAKE_C_FLAGS_DEBUG "-O0 -GGDB")
		SET(CMAKE_C_FLAGS_RELEASE "-O0 -GGDB")
		SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -GGDB")
		SET(CMAKE_CXX_FLAGS_RELEASE "-O0 -GGDB")
	ENDIF()
ENDFUNCTION(SetDebug)

FUNCTION(SetOutputCfg)
    IF(MSVC)
	    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR})
		SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR})
		SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR})
	ELSE()
		SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR}/lib)
		SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR}/lib)
		SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR}/bin)
	ENDIF()
ENDFUNCTION(SetOutputCfg)

FUNCTION(Solution SoluName Debug)
    PROJECT(testsctp)
	IF(${Debug} EQUAL ON)
	    SetDebug()
	ENDIF()
	SetOutputCfg()	
	INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR})
	LINK_DIRECTORIES(${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
ENDFUNCTION(Solution)

FUNCTION(AppPrj PRJNAME SRCLIST LIBLIST)
    ADD_EXECUTABLE(${PRJNAME} ${SRCLIST})
	TARGET_LINK_LIBRARIES(${PRJNAME} ${LIBLIST})
ENDFUNCTION(AppPrj)

FUNCTION(StaticLib PRJNAME SRCLIST)
    ADD_LIBRARY(${PRJNAME} STATIC ${SRCLIST})
	SET_TARGET_PROPERTIES(${PRJNAME} PROPERTIES LINKER_LANGUAGE C)
ENDFUNCTION(StaticLib)

FUNCTION(SharedLib PRJNAME SRCLIST LIBLIST)
    ADD_LIBRARY(${PRJNAME} SHARED ${SRCLIST})
	TARGET_LINK_LIBRARIES(${PRJNAME} ${LIBLIST})
	SET_TARGET_PROPERTIES(${PRJNAME} PROPERTIES LINKER_LANGUAGE C)
ENDFUNCTION(SharedLib)

include(CMakeDefine)
include(CMakeInclude)
include(CMakeLibrary)
include(CMakeSource)
include(CMakeSubPrj)
