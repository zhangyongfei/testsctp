MACRO(EnableUserFolders)
	IF(MSVC) 
		SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
	ENDIF()	
ENDMACRO(EnableUserFolders)

MACRO(SetDebug)
	SET(CMAKE_BUILD_TYPE DEBUG)
	IF(MSVC) 
		SET(CMAKE_C_FLAGS "-DWIN32 -D_DEBUG -DDEBUG")
		SET(CMAKE_CXX_FLAGS "-DWIN32 -D_DEBUG -DDEBUG")
	    ADD_DEFINITIONS(/W2 /wd4996 /EHsc /D "_CRT_SECURE_NO_WARNINGS")
	ELSE()
		SET(CMAKE_C_FLAGS "-g3 -D_DEBUG -DDEBUG -DPOSIX -DLINUX")
		SET(CMAKE_CXX_FLAGS "-g3 -D_DEBUG -DDEBUG -DPOSIX -DLINUX")
	ENDIF()
ENDMACRO(SetDebug)

MACRO(SetRelease)
	SET(CMAKE_BUILD_TYPE RELEASE)
	IF(MSVC) 
		SET(CMAKE_C_FLAGS "-DWIN32")
		SET(CMAKE_CXX_FLAGS "-DWIN32")
	    ADD_DEFINITIONS(/W2 /wd4996 /EHsc /D "_CRT_SECURE_NO_WARNINGS")
	ELSE()
		SET(CMAKE_C_FLAGS "DPOSIX -DLINUX")
		SET(CMAKE_CXX_FLAGS "-DPOSIX -DLINUX")
	ENDIF()
ENDMACRO(SetRelease)

MACRO(SetOutputCfg)
    IF(MSVC)
	    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR})
		SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR})
		SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR})
	ELSE()
		SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR}/lib)
		SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR}/lib)
		SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CACHEFILE_DIR}/bin)
	ENDIF()
ENDMACRO(SetOutputCfg)

MACRO(Solution SoluName Debug)
    PROJECT(${SoluName})
	IF("${Debug}" STREQUAL "ON")
	    MESSAGE(STATUS "Debug Status")
	    SetDebug()
	ELSE()
	   MESSAGE(STATUS "Release Status")
	   SetRelease()
	ENDIF()
	SetOutputCfg()	
	INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR})
	LINK_DIRECTORIES(${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
ENDMACRO(Solution)

FUNCTION(SrcGrpByDir source_files)
    IF(MSVC)
        SET(sgbd_cur_dir ${CMAKE_CURRENT_SOURCE_DIR})
        FOREACH(sgbd_file ${${source_files}})
            STRING(REGEX REPLACE ${sgbd_cur_dir}/\(.*\) \\1 sgbd_fpath ${sgbd_file})
            STRING(REGEX REPLACE "\(.*\)/.*" \\1 sgbd_group_name ${sgbd_fpath})
            STRING(COMPARE EQUAL ${sgbd_fpath} ${sgbd_group_name} sgbd_nogroup)
            STRING(REPLACE "/" "\\" sgbd_group_name ${sgbd_group_name})
            IF(sgbd_nogroup)
                SET(sgbd_group_name "\\")
            ENDIF(sgbd_nogroup)
            SOURCE_GROUP(${sgbd_group_name} FILES ${sgbd_file})
        ENDFOREACH(sgbd_file)
    ENDIF(MSVC)
ENDFUNCTION(SrcGrpByDir)


MACRO(AppPrj PRJNAME SRCLIST LIBLIST)
    SrcGrpByDir(${SRCLIST})
    ADD_EXECUTABLE(${PRJNAME} ${${SRCLIST}})
	TARGET_LINK_LIBRARIES(${PRJNAME} ${${LIBLIST}})
	SET_TARGET_PROPERTIES(${PRJNAME} PROPERTIES LINKER_LANGUAGE C)
ENDMACRO(AppPrj)

MACRO(StaticLib PRJNAME SRCLIST)
    SrcGrpByDir(${SRCLIST})
    ADD_LIBRARY(${PRJNAME} STATIC ${${SRCLIST}})
	SET_TARGET_PROPERTIES(${PRJNAME} PROPERTIES LINKER_LANGUAGE C)
ENDMACRO(StaticLib)

MACRO(SharedLib PRJNAME SRCLIST LIBLIST)
    SrcGrpByDir(${SRCLIST})
    ADD_LIBRARY(${PRJNAME} SHARED ${${SRCLIST}})
	TARGET_LINK_LIBRARIES(${PRJNAME} ${${LIBLIST}})
	SET_TARGET_PROPERTIES(${PRJNAME} PROPERTIES LINKER_LANGUAGE C)
ENDMACRO(SharedLib)

include(CMakeDefine)
include(CMakeInclude)
include(CMakeLibrary)
include(CMakeSource)
include(CMakeSubPrj)
